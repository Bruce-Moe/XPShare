{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruce\\\\Documents\\\\GitHub\\\\f20-bt-remote-rlmmo\\\\app\\\\components\\\\SearchScreen\\\\post.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, PureComponent } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Slider from \"@react-native-community/slider\";\n\nvar post = function (_PureComponent) {\n  _inherits(post, _PureComponent);\n\n  var _super = _createSuper(post);\n\n  function post(pfp, imageURL, username, guild, caption) {\n    _classCallCheck(this, post);\n\n    return _super.call(this);\n  }\n\n  _createClass(post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.postInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.profileFormat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.profileIcon,\n        source: {\n          uri: this.props.pfp\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.pfpInfoFormat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.usernameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, this.props.username), React.createElement(TouchableOpacity, {\n        style: {\n          marginLeft: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.reportIcon,\n        source: {\n          uri: \"https://image.flaticon.com/icons/png/512/179/179386.png\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }))), React.createElement(Text, {\n        style: styles.usernameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, \"Guild: \", this.props.guild)))), React.createElement(View, {\n        style: styles.post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.center,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.postImage,\n        source: {\n          uri: this.props.imageURL\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.postActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          paddingTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, \" \", this.props.username), React.createElement(Text, {\n        style: styles.caption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, \" \", this.props.caption)), React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: \"flex-end\",\n          marginRight: \"2%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 40,\n          height: 40\n        },\n        source: {\n          uri: \"https://icons-for-free.com/iconfiles/png/512/comment-131965017416332557.png\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, \" \", \"Award [\", this.props.skill, \"] experience to this post:\", \" \")), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Slider, {\n        style: {\n          marginTop: 20,\n          marginBottom: -50,\n          width: 200,\n          height: 40\n        },\n        minimumValue: 0,\n        maximumValue: 10,\n        step: 1,\n        minimumTrackTintColor: \"#FFFFFF\",\n        maximumTrackTintColor: \"#000000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return post;\n}(PureComponent);\n\nexport { post as default };\nvar styles = StyleSheet.create({\n  alignEnd: {\n    flex: 1,\n    alignItems: \"flex-end\"\n  },\n  reportIcon: {\n    width: 20,\n    height: 20\n  },\n  center: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  caption: {\n    fontSize: 15\n  },\n  container: {\n    flexDirection: \"column\",\n    flex: 1\n  },\n  comment: {\n    paddingLeft: 10,\n    flexDirection: \"row\",\n    flex: 1\n  },\n  user: {\n    fontWeight: \"bold\",\n    fontSize: 15\n  },\n  profileFormat: {\n    flex: 1,\n    left: \"5%\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  pfpInfoFormat: {\n    flex: 1,\n    marginLeft: 10\n  },\n  usernameText: {\n    top: \"-2.5%\",\n    fontSize: 20\n  },\n  profileIcon: {\n    width: 75,\n    height: 75\n  },\n  postInfo: {\n    backgroundColor: \"#F6F0ED\",\n    flex: 1.1,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 0.5\n  },\n  post: {\n    flex: 6,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1\n  },\n  postImage: {\n    width: 200,\n    height: 200\n  },\n  postActions: {\n    flexDirection: \"column\",\n    backgroundColor: \"#F6F0ED\",\n    flex: 2,\n    paddingBottom: 100,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 0.5\n  },\n  row: {\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["C:/Users/bruce/Documents/GitHub/f20-bt-remote-rlmmo/app/components/SearchScreen/post.js"],"names":["React","useState","PureComponent","Slider","post","pfp","imageURL","username","guild","caption","styles","container","postInfo","profileFormat","profileIcon","uri","props","pfpInfoFormat","flexDirection","usernameText","marginLeft","reportIcon","center","postImage","postActions","paddingTop","comment","user","alignItems","marginRight","width","height","marginTop","skill","justifyContent","marginBottom","StyleSheet","create","alignEnd","flex","fontSize","paddingLeft","fontWeight","left","top","backgroundColor","borderBottomColor","borderBottomWidth","paddingBottom","row"],"mappings":"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","sourcesContent":["import React, { useState, PureComponent } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\n//const [sliderValue, setSliderValue] = useState(15);\r\n\r\nexport default class post extends PureComponent {\r\n  constructor(pfp, imageURL, username, guild, caption) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {/*Post Header*/}\r\n        <View style={styles.postInfo}>\r\n          <View style={styles.profileFormat}>\r\n            <Image\r\n              style={styles.profileIcon}\r\n              source={{ uri: this.props.pfp }}\r\n            />\r\n            {/* <Avatar\r\n              //style={styles.profileIcon}\r\n              source={require(\"../../assets/pfp.png\")}\r\n            /> */}\r\n            <View style={styles.pfpInfoFormat}>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Text style={styles.usernameText}>{this.props.username}</Text>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    //flex: 1,\r\n                    //alignItems: \"flex-end\",\r\n                    marginLeft: \"100%\",\r\n                  }}\r\n                >\r\n                  <Image\r\n                    style={styles.reportIcon}\r\n                    source={{\r\n                      uri:\r\n                        \"https://image.flaticon.com/icons/png/512/179/179386.png\",\r\n                    }}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n              <Text style={styles.usernameText}>Guild: {this.props.guild}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        {/*Post Body*/}\r\n        <View style={styles.post}>\r\n          <View style={styles.center}>\r\n            <Image\r\n              style={styles.postImage}\r\n              source={{ uri: this.props.imageURL }}\r\n            />\r\n          </View>\r\n        </View>\r\n        {/*Post Footer*/}\r\n        <View style={styles.postActions}>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              paddingTop: 10,\r\n            }}\r\n          >\r\n            <View style={styles.comment}>\r\n              <Text style={styles.user}> {this.props.username}</Text>\r\n              <Text style={styles.caption}> {this.props.caption}</Text>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={{\r\n                alignItems: \"flex-end\",\r\n                marginRight: \"2%\",\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  width: 40,\r\n                  height: 40,\r\n                }}\r\n                source={{\r\n                  uri:\r\n                    \"https://icons-for-free.com/iconfiles/png/512/comment-131965017416332557.png\",\r\n                }}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              marginTop: 15,\r\n            }}\r\n          >\r\n            <Text style={styles.user}>\r\n              {\" \"}\r\n              Award [{this.props.skill}] experience to this post:{\" \"}\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Slider\r\n              style={{\r\n                marginTop: 20,\r\n                marginBottom: -50,\r\n                width: 200,\r\n                height: 40,\r\n              }}\r\n              minimumValue={0}\r\n              maximumValue={10}\r\n              step={1}\r\n              //value={sliderValue}\r\n              //onValueChange={(sliderValue) => setSliderValue(sliderValue)}\r\n              minimumTrackTintColor=\"#FFFFFF\"\r\n              maximumTrackTintColor=\"#000000\"\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  alignEnd: {\r\n    flex: 1,\r\n    alignItems: \"flex-end\",\r\n  },\r\n  reportIcon: {\r\n    //marginLeft: \"50%\",\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  caption: {\r\n    fontSize: 15,\r\n  },\r\n  container: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n  },\r\n  comment: {\r\n    //paddingTop: 10,\r\n    paddingLeft: 10,\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n  },\r\n  user: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 15,\r\n  },\r\n  profileFormat: {\r\n    flex: 1,\r\n    left: \"5%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  pfpInfoFormat: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  usernameText: {\r\n    top: \"-2.5%\",\r\n    fontSize: 20,\r\n  },\r\n  profileIcon: {\r\n    width: 75,\r\n    height: 75,\r\n  },\r\n  postInfo: {\r\n    backgroundColor: \"#F6F0ED\",\r\n    flex: 1.1,\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 0.5,\r\n  },\r\n  post: {\r\n    flex: 6,\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  postImage: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n  postActions: {\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#F6F0ED\",\r\n    flex: 2,\r\n    paddingBottom: 100,\r\n    borderBottomColor: \"gray\",\r\n    borderBottomWidth: 0.5,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}