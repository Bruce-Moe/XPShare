{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruce\\\\Documents\\\\GitHub\\\\f20-bt-remote-rlmmo\\\\app\\\\screens\\\\LogInScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport firebase from \"firebase\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar LogInScreen = function (_React$Component) {\n  _inherits(LogInScreen, _React$Component);\n\n  var _super = _createSuper(LogInScreen);\n\n  function LogInScreen() {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null\n    };\n\n    _this.loginHandler = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n        console.log(response);\n\n        if (response.user != null) {\n          _this.props.navigation.navigate(\"Home\");\n        }\n      }).catch(function (error) {\n        _this.setState({\n          errorMessage: \"Error logging in. Did you use the right credentials?\"\n        });\n\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LinearGradient, {\n        colors: [\"#FFE9E4\", \"#ff2e00\"],\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../assets/rank.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        style: styles.slogantext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, \"This is our slogan!\"), React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, this.state.errorMessage && React.createElement(Text, {\n        style: styles.loginerrortext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, this.state.errorMessage)), React.createElement(View, {\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.inputbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        placeholder: \"E-mail\",\n        placeholderTextColor: \"#290907\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        placeholder: \"Password\",\n        placeholderTextColor: \"#290907\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.nextbutton,\n        onPress: this.loginHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.nextbuttontext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Log In\")), React.createElement(View, {\n        style: {\n          paddingTop: 20,\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"SignUp1\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.signuptext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, \" Sign up!\"))));\n    }\n  }]);\n\n  return LogInScreen;\n}(React.Component);\n\nexport { LogInScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 100,\n    height: 100\n  },\n  slogantext: {\n    color: \"white\",\n    fontSize: 30,\n    justifyContent: \"center\",\n    paddingBottom: 20\n  },\n  inputbox: {\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    width: 300,\n    height: 50,\n    borderRadius: 20,\n    margin: 10\n  },\n  signuptext: {\n    color: \"#290907\",\n    fontWeight: \"600\"\n  },\n  nextbutton: {\n    justifyContent: \"center\",\n    backgroundColor: \"#290907\",\n    width: 300,\n    height: 50,\n    borderRadius: 20\n  },\n  nextbuttontext: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 20\n  },\n  loginerrortext: {\n    color: \"red\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/bruce/Documents/GitHub/f20-bt-remote-rlmmo/app/screens/LogInScreen.js"],"names":["React","useState","LinearGradient","firebase","useNavigation","LogInScreen","state","email","password","errorMessage","loginHandler","auth","signInWithEmailAndPassword","then","response","console","log","user","props","navigation","navigate","catch","error","setState","styles","container","padding","logo","require","slogantext","justifyContent","alignItems","loginerrortext","inputbox","textAlign","fontSize","nextbutton","nextbuttontext","paddingTop","flexDirection","color","signuptext","Component","StyleSheet","create","flex","width","height","paddingBottom","backgroundColor","borderRadius","margin","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport firebase from \"firebase\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default class LogInScreen extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: null,\r\n  };\r\n\r\n  // Firebase login\r\n  loginHandler = () => {\r\n    const { email, password } = this.state;\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.user != null) {\r\n          this.props.navigation.navigate(\"Home\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          errorMessage: \"Error logging in. Did you use the right credentials?\",\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LinearGradient colors={[\"#FFE9E4\", \"#ff2e00\"]} style={styles.container}>\r\n        <View style={{ padding: 30 }}>\r\n          <Image style={styles.logo} source={require(\"../assets/rank.png\")} />\r\n        </View>\r\n\r\n        <Text style={styles.slogantext}>This is our slogan!</Text>\r\n\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n          {this.state.errorMessage && (\r\n            <Text style={styles.loginerrortext}>{this.state.errorMessage}</Text>\r\n          )}\r\n        </View>\r\n\r\n        <View style={{ padding: 10 }}>\r\n          <View style={styles.inputbox}>\r\n            <TextInput\r\n              style={{ textAlign: \"center\", fontSize: 20 }}\r\n              placeholder=\"E-mail\"\r\n              placeholderTextColor=\"#290907\"\r\n              onChangeText={(email) => this.setState({ email })}\r\n              value={this.state.email}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.inputbox}>\r\n            <TextInput\r\n              style={{ textAlign: \"center\", fontSize: 20 }}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#290907\"\r\n              secureTextEntry={true}\r\n              autoCapitalize=\"none\"\r\n              onChangeText={(password) => this.setState({ password })}\r\n              value={this.state.password}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.nextbutton} onPress={this.loginHandler}>\r\n          <Text style={styles.nextbuttontext}>Log In</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={{ paddingTop: 20, flexDirection: \"row\" }}>\r\n          <Text style={{ color: \"white\" }}>Don't have an account?</Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              this.props.navigation.navigate(\"SignUp1\");\r\n            }}\r\n          >\r\n            <Text style={styles.signuptext}> Sign up!</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </LinearGradient>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  slogantext: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    justifyContent: \"center\",\r\n    paddingBottom: 20,\r\n  },\r\n  inputbox: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    width: 300,\r\n    height: 50,\r\n    borderRadius: 20,\r\n    margin: 10,\r\n  },\r\n  signuptext: {\r\n    color: \"#290907\",\r\n    fontWeight: \"600\",\r\n  },\r\n  nextbutton: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#290907\",\r\n    width: 300,\r\n    height: 50,\r\n    borderRadius: 20,\r\n  },\r\n  nextbuttontext: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 20,\r\n  },\r\n  loginerrortext: {\r\n    color: \"red\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    padding: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}