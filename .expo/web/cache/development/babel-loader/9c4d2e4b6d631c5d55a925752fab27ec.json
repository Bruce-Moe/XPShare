{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruce\\\\Documents\\\\GitHub\\\\f20-bt-remote-rlmmo\\\\app\\\\screens\\\\SignUpScreen1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport firebase from 'firebase';\n\nvar LogInScreen = function (_React$Component) {\n  _inherits(LogInScreen, _React$Component);\n\n  var _super = _createSuper(LogInScreen);\n\n  function LogInScreen() {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      password2: '',\n      errorMessage: ''\n    };\n\n    _this.signupHandler = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          password2 = _this$state.password2;\n\n      if (password != password2) {\n        _this.setState({\n          errorMessage: 'Passwords do not match.'\n        });\n      } else {\n        firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n          return _this.setState({\n            errorMessage: ''\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LinearGradient, {\n        colors: [\"#FFE9E4\", \"#ff2e00\"],\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.toptext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, \"Sign up!\"), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, this.state.errorMessage && React.createElement(Text, {\n        style: styles.signuperrortext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 39\n        }\n      }, this.state.errorMessage)), React.createElement(View, {\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.inputbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        placeholder: \"E-mail\",\n        placeholderTextColor: \"#290907\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        placeholder: \"Password\",\n        placeholderTextColor: \"#290907\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20\n        },\n        placeholder: \"Confirm Password\",\n        placeholderTextColor: \"#290907\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password2) {\n          return _this2.setState({\n            password2: password2\n          });\n        },\n        value: this.state.password2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.nextbutton,\n        onPress: this.signupHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.nextbuttontext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"Next page\"))));\n    }\n  }]);\n\n  return LogInScreen;\n}(React.Component);\n\nexport { LogInScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  toptext: {\n    color: \"#290907\",\n    fontSize: 40,\n    justifyContent: \"center\",\n    paddingBottom: 10\n  },\n  inputbox: {\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    width: 300,\n    height: 50,\n    borderRadius: 20,\n    margin: 10\n  },\n  nextbutton: {\n    justifyContent: \"center\",\n    backgroundColor: \"#290907\",\n    width: 300,\n    height: 50,\n    borderRadius: 20,\n    margin: 10\n  },\n  nextbuttontext: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 20\n  },\n  signuperrortext: {\n    color: 'red',\n    fontSize: 18,\n    fontWeight: 'bold',\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/bruce/Documents/GitHub/f20-bt-remote-rlmmo/app/screens/SignUpScreen1.js"],"names":["React","useState","LinearGradient","firebase","LogInScreen","state","email","password","password2","errorMessage","signupHandler","setState","auth","createUserWithEmailAndPassword","catch","error","styles","container","toptext","justifyContent","alignItems","signuperrortext","padding","inputbox","textAlign","fontSize","nextbutton","nextbuttontext","Component","StyleSheet","create","flex","color","paddingBottom","backgroundColor","width","height","borderRadius","margin","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport firebase from 'firebase'\r\n\r\n\r\nexport default class LogInScreen extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    errorMessage: '',\r\n  };\r\n\r\n  // Firebase signup\r\n  signupHandler = () => {\r\n    const {email, password, password2} = this.state\r\n\r\n    if (password != password2) {\r\n      this.setState({errorMessage: 'Passwords do not match.'})\r\n    }\r\n    else {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .catch(error => this.setState({errorMessage: ''}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LinearGradient colors={[\"#FFE9E4\", \"#ff2e00\"]} style={styles.container}>\r\n\r\n        <Text style={styles.toptext}>Sign up!</Text>\r\n\r\n        <View style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n          {this.state.errorMessage && <Text style={styles.signuperrortext}>\r\n            {this.state.errorMessage}\r\n          </Text>}\r\n        </View>\r\n\r\n        <View style={{ padding: 10 }}>\r\n          <View style={styles.inputbox}>\r\n            <TextInput\r\n              style={{textAlign: \"center\", fontSize: 20}}\r\n              placeholder=\"E-mail\"\r\n              placeholderTextColor=\"#290907\"\r\n              onChangeText={email => this.setState({email})}\r\n              value={this.state.email}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.inputbox}>\r\n            <TextInput\r\n              style={{textAlign: \"center\", fontSize: 20}}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#290907\"\r\n              secureTextEntry={true}\r\n              autoCapitalize=\"none\"\r\n              onChangeText={password => this.setState({password})}\r\n              value={this.state.password}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.inputbox}>\r\n            <TextInput\r\n              style={{textAlign: \"center\", fontSize: 20}}\r\n              placeholder=\"Confirm Password\"\r\n              placeholderTextColor=\"#290907\"\r\n              secureTextEntry={true}\r\n              autoCapitalize=\"none\"\r\n              onChangeText={password2 => this.setState({password2})}\r\n              value={this.state.password2}\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n          style={styles.nextbutton}\r\n          onPress={this.signupHandler}\r\n          >\r\n            <Text style={styles.nextbuttontext}>Next page</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </LinearGradient>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  toptext: {\r\n    color: \"#290907\",\r\n    fontSize: 40,\r\n    justifyContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  inputbox: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    width: 300,\r\n    height: 50,\r\n    borderRadius: 20,\r\n    margin: 10,\r\n  },\r\n  nextbutton: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#290907\",\r\n    width: 300,\r\n    height: 50,\r\n    borderRadius: 20,\r\n    margin: 10,    \r\n  },\r\n  nextbuttontext: {\r\n    textAlign: 'center', \r\n    color: 'white',\r\n    fontSize: 20,\r\n  },\r\n  signuperrortext: {\r\n    color: 'red', \r\n    fontSize: 18, \r\n    fontWeight: 'bold',\r\n    padding: 5\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}